import {
  getAllClients,
  getClientById,
  createClient,
  updateClient,
  deleteClient,
} from "../services/client.service.js";

// üìÑ –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤
export const getClients = async (req, res) => {
  try {
    const clients = await getAllClients();
    res.json(clients);
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: "–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
  }
};

// üìÑ –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞ –ø–æ ID
export const getClient = async (req, res) => {
  try {
    const client = await getClientById(req.params.id);
    if (!client) {
      return res.status(404).json({ message: "–ö–ª—ñ—î–Ω—Ç–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ" });
    }
    res.json(client);
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: "–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
  }
};

// ‚ûï –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞
export const createNewClient = async (req, res) => {
  try {
    const userId = req.user.userId;
    const newClient = await createClient(req.body, userId);
    res.status(201).json(newClient);
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: "–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
  }
};

// üõ†Ô∏è –û–Ω–æ–≤–∏—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞
export const updateExistingClient = async (req, res) => {
  try {
    const userId = req.user.userId;
    const updatedClient = await updateClient(req.params.id, req.body, userId);
    res.json(updatedClient);
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: "–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
  }
};

// ‚ùå –í–∏–¥–∞–ª–∏—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞ (soft delete)
export const removeClient = async (req, res) => {
  try {
    const userId = req.user.userId;
    await deleteClient(req.params.id, userId);
    res.json({ message: "–ö–ª—ñ—î–Ω—Ç–∞ –≤–∏–¥–∞–ª–µ–Ω–æ" });
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: "–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
  }
};
