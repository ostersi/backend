import {
    createUser,
    updateUser,
    getAllUsers,
    getUserById,
    deleteUser,
  } from "../services/user.service.js";
  
  // ‚úÖ –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ—Ö
  export const getUsers = async (req, res) => {
    try {
      const users = await getAllUsers();
      res.json(users);
    } catch (err) {
      console.error(err);
      res.status(500).json({ message: "–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤." });
    }
  };
  
  // ‚úÖ –û—Ç—Ä–∏–º–∞—Ç–∏ –æ–¥–Ω–æ–≥–æ
  export const getSingleUser = async (req, res) => {
    try {
      const userId = parseInt(req.params.id);
      const user = await getUserById(userId);
      if (!user) return res.status(404).json({ message: "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ." });
      res.json(user);
    } catch (err) {
      console.error(err);
      res.status(500).json({ message: "–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞." });
    }
  };
  
  // ‚ûï –°—Ç–≤–æ—Ä–∏—Ç–∏
  export const createNewUser = async (req, res) => {
    try {
      const user = await createUser(req.body);
      res.status(201).json(user);
    } catch (err) {
      console.error(err);
      res.status(500).json({ message: "–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞." });
    }
  };
  
  // üõ†Ô∏è –û–Ω–æ–≤–∏—Ç–∏
  export const updateExistingUser = async (req, res) => {
    try {
      const userId = parseInt(req.params.id);
      const user = await updateUser(userId, req.body);
      res.json(user);
    } catch (err) {
      console.error(err);
      res.status(500).json({ message: "–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞." });
    }
  };
  
  // ‚ùå –í–∏–¥–∞–ª–∏—Ç–∏
  export const removeUser = async (req, res) => {
    try {
      const userId = parseInt(req.params.id);
      await deleteUser(userId);
      res.json({ message: "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–∏–¥–∞–ª–µ–Ω–æ." });
    } catch (err) {
      console.error(err);
      res.status(500).json({ message: "–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞." });
    }
  };
  
  // üë§ –ü–æ—Ç–æ—á–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
  export const getCurrentUser = async (req, res) => {
    try {
      const user = await getUserById(req.user.userId);
      if (!user) return res.status(404).json({ message: "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ." });
      const { id, email, role, userInfo } = user;
      res.json({ id, email, role, ...userInfo });
    } catch (err) {
      console.error(err);
      res.status(500).json({ message: "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é." });
    }
  };
  